(function(){var e={"esri/tasks/support/FeatureSet":187,"esri/layers/MapNotesLayer":747},t=this||window,r=t.webpackJsonp=t.webpackJsonp||[];r.registerAbsMids?r.registerAbsMids(e):(r.absMidsWaiting=r.absMidsWaiting||[]).push(e)})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[132,32,188],{187:function(e,t,r){var o,n;o=[r.dj.c(e.i),t,r(117),r(159),r(174),r(166),r(155),r(152),r(151),r(170),r(163),r(194)],void 0===(n=function(e,t,r,o,n,i,a,l,p,s,u,y){var c=new i.default({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh"}),f=function(e){function t(t){var r=e.call(this,t)||this;return r.displayFieldName=null,r.exceededTransferLimit=!1,r.features=[],r.fields=null,r.geometryType=null,r.hasM=!1,r.hasZ=!1,r.queryGeometry=null,r.spatialReference=null,r}return r.__extends(t,e),t.prototype.readFeatures=function(e,t){for(var r=s.fromJSON(t.spatialReference),o=[],i=0;i<e.length;i++){var a=e[i],p=n.fromJSON(a),u=a.geometry&&a.geometry.spatialReference;l.isSome(p.geometry)&&!u&&(p.geometry.spatialReference=r),o.push(p)}return o},t.prototype.writeGeometryType=function(e,t,r,o){if(e)c.write(e,t,r,o);else{var n=this.features;if(n)for(var i=0,a=n;i<a.length;i++){var p=a[i];if(p&&l.isSome(p.geometry))return void c.write(p.geometry.type,t,r,o)}}},t.prototype.writeSpatialReference=function(e,t){if(e)t.spatialReference=e.toJSON();else{var r=this.features;if(r)for(var o=0,n=r;o<n.length;o++){var i=n[o];i&&l.isSome(i.geometry)&&i.geometry.spatialReference&&(t.spatialReference=i.geometry.spatialReference.toJSON())}}},t.prototype.toJSON=function(e){var t=this.write(null);if(t.features&&Array.isArray(e)&&e.length>0)for(var r=0;r<t.features.length;r++){var o=t.features[r];if(o.geometry){var n=e&&e[r];o.geometry=n&&n.toJSON()||o.geometry}}return t},t.prototype.quantize=function(e){for(var t=e.scale,r=t[0],o=t[1],n=e.translate,i=n[0],a=n[1],p=this.features,s=this._getQuantizationFunction(this.geometryType,(function(e){return Math.round((e-i)/r)}),(function(e){return Math.round((a-e)/o)})),u=0,y=p.length;u<y;u++)s(l.unwrap(p[u].geometry))||(p.splice(u,1),u--,y--);return this.transform=e,this},t.prototype.unquantize=function(){var e=this.geometryType,t=this.features,r=this.transform;if(!r)return this;for(var o=r.translate,n=o[0],i=o[1],a=r.scale,p=a[0],s=a[1],u=this._getHydrationFunction(e,(function(e){return e*p+n}),(function(e){return i-e*s})),y=0,c=t;y<c.length;y++){var f=c[y].geometry;l.isSome(f)&&u(f)}return this},t.prototype._quantizePoints=function(e,t,r){for(var o,n,i=[],a=0,l=e.length;a<l;a++){var p=e[a];if(a>0){var s=t(p[0]),u=r(p[1]);s===o&&u===n||(i.push([s-o,u-n]),o=s,n=u)}else o=t(p[0]),n=r(p[1]),i.push([o,n])}return i.length>0?i:null},t.prototype._getQuantizationFunction=function(e,t,r){var o=this;return"point"===e?function(e){return e.x=t(e.x),e.y=r(e.y),e}:"polyline"===e||"polygon"===e?function(e){for(var n=u.isPolygon(e)?e.rings:e.paths,i=[],a=0,l=n.length;a<l;a++){var p=n[a],s=o._quantizePoints(p,t,r);s&&i.push(s)}return i.length>0?(u.isPolygon(e)?e.rings=i:e.paths=i,e):null}:"multipoint"===e?function(e){var n;return(n=o._quantizePoints(e.points,t,r)).length>0?(e.points=n,e):null}:"extent"===e?function(e){return e}:null},t.prototype._getHydrationFunction=function(e,t,r){return"point"===e?function(e){e.x=t(e.x),e.y=r(e.y)}:"polyline"===e||"polygon"===e?function(e){for(var o,n,i=u.isPolygon(e)?e.rings:e.paths,a=0,l=i.length;a<l;a++)for(var p=i[a],s=0,y=p.length;s<y;s++){var c=p[s];s>0?(o+=c[0],n+=c[1]):(o=c[0],n=c[1]),c[0]=t(o),c[1]=r(n)}}:"extent"===e?function(e){e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax)}:"multipoint"===e?function(e){for(var o,n,i=e.points,a=0,l=i.length;a<l;a++){var p=i[a];a>0?(o+=p[0],n+=p[1]):(o=p[0],n=p[1]),p[0]=t(o),p[1]=r(n)}}:void 0},r.__decorate([p.property({type:String,json:{write:!0}})],t.prototype,"displayFieldName",void 0),r.__decorate([p.property({type:Boolean,json:{write:{overridePolicy:function(e){return{enabled:e}}}}})],t.prototype,"exceededTransferLimit",void 0),r.__decorate([p.property({type:[n],json:{write:!0}})],t.prototype,"features",void 0),r.__decorate([p.reader("features")],t.prototype,"readFeatures",null),r.__decorate([p.property({type:[y],json:{write:!0}})],t.prototype,"fields",void 0),r.__decorate([p.property({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:c.read}}})],t.prototype,"geometryType",void 0),r.__decorate([p.writer("geometryType")],t.prototype,"writeGeometryType",null),r.__decorate([p.property({type:Boolean,json:{write:{overridePolicy:function(e){return{enabled:e}}}}})],t.prototype,"hasM",void 0),r.__decorate([p.property({type:Boolean,json:{write:{overridePolicy:function(e){return{enabled:e}}}}})],t.prototype,"hasZ",void 0),r.__decorate([p.property({types:o.geometryTypes,json:{read:u.fromJSON,write:!0}})],t.prototype,"queryGeometry",void 0),r.__decorate([p.property({type:s,json:{write:!0}})],t.prototype,"spatialReference",void 0),r.__decorate([p.writer("spatialReference")],t.prototype,"writeSpatialReference",null),r.__decorate([p.property({json:{write:!0}})],t.prototype,"transform",void 0),r.__decorate([p.subclass("esri.tasks.support.FeatureSet")],t)}(a.JSONSupport);return f.prototype.toJSON.isDefaultToJSON=!0,f||(f={}),f}.apply(null,o))||(e.exports=n)},747:function(e,t,r){var o,n;o=[r.dj.c(e.i),t,r(117),r(169),r(225),r(153),r(151),r(222),r(208),r(244),r(240)],void 0===(n=function(e,t,r,o,n,i,a,l,p,s,u){return function(e){function t(t){var r=e.call(this,t)||this;return r.type="map-notes",r}return r.__extends(t,e),Object.defineProperty(t.prototype,"fullExtent",{get:function(){return this.featureCollections?this.featureCollections.reduce((function(e,t){return e?e.union(t.fullExtent):t.fullExtent}),null):null},enumerable:!0,configurable:!0}),t.prototype.readFeatureCollectionsFromItem=function(e,t,r){return t.layers.map((function(e){var t=new l;return t.read(e,r),t}))},t.prototype.readFeatureCollectionsFromWebMap=function(e,t,r){return t.featureCollection.layers.map((function(e){var t=new l;return t.read(e,r),t}))},Object.defineProperty(t.prototype,"minScale",{get:function(){return this.featureCollections?this.featureCollections.reduce((function(e,t){return null==e?t.minScale:Math.min(e,t.minScale)}),null):0},set:function(e){this.featureCollections.forEach((function(t){t.minScale=e})),this._set("minScale",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxScale",{get:function(){return this.featureCollections?this.featureCollections.reduce((function(e,t){return null==e?t.maxScale:Math.min(e,t.maxScale)}),null):0},set:function(e){this.featureCollections.forEach((function(t){t.maxScale=e})),this._set("maxScale",e)},enumerable:!0,configurable:!0}),t.prototype.load=function(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),i.resolve(this)},r.__decorate([a.property({dependsOn:["featureCollections"],readOnly:!0})],t.prototype,"fullExtent",null),r.__decorate([a.property({type:["show","hide"]})],t.prototype,"listMode",void 0),r.__decorate([a.property({type:o.ofType(l)})],t.prototype,"featureCollections",void 0),r.__decorate([a.reader("portal-item","featureCollections",["layers"])],t.prototype,"readFeatureCollectionsFromItem",null),r.__decorate([a.reader("web-map","featureCollections",["featureCollection.layers"])],t.prototype,"readFeatureCollectionsFromWebMap",null),r.__decorate([a.property({dependsOn:["featureCollections"]})],t.prototype,"minScale",null),r.__decorate([a.property({dependsOn:["featureCollections"]})],t.prototype,"maxScale",null),r.__decorate([a.property({readOnly:!0,json:{read:!1}})],t.prototype,"type",void 0),r.__decorate([a.subclass("esri.layers.MapNotesLayer")],t)}(s.OperationalLayer(u.PortalLayer(n.MultiOriginJSONMixin(p))))}.apply(null,o))||(e.exports=n)}}]);
//# sourceMappingURL=132.js.map