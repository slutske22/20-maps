(function(){var e={"esri/layers/support/RasterFunction":313,"esri/layers/support/MosaicRule":400,"esri/layers/support/DimensionalDefinition":421,"esri/layers/support/imageryRendererUtils":422,"esri/layers/ImageryLayer":460,"esri/layers/support/RasterJobHandler":550,"esri/layers/mixins/ArcGISImageService":689,"esri/layers/support/ExportImageServiceParameters":690,"esri/tasks/ImageServiceIdentifyTask":693,"esri/tasks/support/ImageServiceIdentifyResult":694,"esri/tasks/support/ImageServiceIdentifyParameters":696},t=this||window,r=t.webpackJsonp=t.webpackJsonp||[];r.registerAbsMids?r.registerAbsMids(e):(r.absMidsWaiting=r.absMidsWaiting||[]).push(e)})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{313:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(155),r(118),r(198),r(151)],void 0===(i=function(e,t,r,n,i,o,a){var s,l=o.SetFromValues(["Raster","Raster2","DEM","FillRaster"]),u=o.SetFromValues(["Rasters"]),p=function(e){return e&&e.rasterFunction?d.fromJSON(e):e},c=function(e){return e&&e instanceof d?e.toJSON():e};!function(e){e[e.MOSAIC=0]="MOSAIC",e[e.GROUP=1]="GROUP",e[e.ITEM=2]="ITEM"}(s||(s={}));var d=function(e){function t(t){var r=e.call(this,t)||this;return r.functionArguments=null,r.functionName=null,r.outputPixelType="unknown",r.variableName=null,r.description=null,r.functionDefinition=null,r.thumbnail=null,r}var n;return r.__extends(t,e),n=t,t.prototype.readFunctionArguments=function(e,t){return function(e){if(null==e)return null;for(var t={},r=0,n=Object.keys(e);r<n.length;r++){var i=n[r];l.has(i)?t[i]=p(e[i]):u.has(i)&&Array.isArray(e[i])?t[i]=e[i].map(p):t[i]=e[i]}return t}(t.arguments||t.rasterFunctionArguments)},t.prototype.writeFunctionArguments=function(e,t,r){for(var n={},i=0,o=Object.keys(e);i<o.length;i++){var a=o[i];l.has(a)?n[a]=c(e[a]):u.has(a)&&Array.isArray(e[a])?n[a]=e[a].map(c):n[a]=c(e[a])}this.functionDefinition?t.arguments=n:t[r]=n},t.prototype.readFunctionName=function(e,t){var r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)},t.prototype.writeFunctionName=function(e,t,r){this.functionDefinition?t.name=e:t[r]=e},t.prototype.readFunctionType=function(e){return s[e]},t.prototype.writeFunctionType=function(e,t,r){t[r]=s[e]},t.prototype.clone=function(){return new n({functionName:this.functionName,functionArguments:i.clone(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,name:this.functionName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})},r.__decorate([a.property({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],t.prototype,"functionArguments",void 0),r.__decorate([a.reader("functionArguments",["rasterFunctionArguments","arguments"])],t.prototype,"readFunctionArguments",null),r.__decorate([a.writer("functionArguments")],t.prototype,"writeFunctionArguments",null),r.__decorate([a.property({json:{type:String,write:{target:"rasterFunction"}}})],t.prototype,"functionName",void 0),r.__decorate([a.reader("functionName",["rasterFunction","rasterFunctionInfos","name"])],t.prototype,"readFunctionName",null),r.__decorate([a.writer("functionName")],t.prototype,"writeFunctionName",null),r.__decorate([a.enumeration({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),a.property({json:{default:"unknown"}})],t.prototype,"outputPixelType",void 0),r.__decorate([a.property({type:String,json:{read:!0,write:!0}})],t.prototype,"variableName",void 0),r.__decorate([a.property({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],t.prototype,"description",void 0),r.__decorate([a.property({json:{origins:{"web-document":{read:!1,write:!1}}}})],t.prototype,"functionType",void 0),r.__decorate([a.reader("functionType")],t.prototype,"readFunctionType",null),r.__decorate([a.writer("functionType")],t.prototype,"writeFunctionType",null),r.__decorate([a.property({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],t.prototype,"functionDefinition",void 0),r.__decorate([a.property({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],t.prototype,"thumbnail",void 0),n=r.__decorate([a.subclass("esri.layers.support.RasterFunction")],t)}(n.JSONSupport);return d}.apply(null,n))||(e.exports=i)},400:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(166),r(155),r(118),r(151),r(202),r(421),r(313)],void 0===(i=function(e,t,r,n,i,o,a,s,l,u){var p=n.strict()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),c=n.strict()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});return function(e){function t(t){var r=e.call(this,t)||this;return r.ascending=!0,r.itemRenderingRule=null,r.lockRasterIds=null,r.method=null,r.multidimensionalDefinition=null,r.objectIds=null,r.operation=null,r.sortField=null,r.sortValue=null,r.viewpoint=null,r.where=null,r}var n;return r.__extends(t,e),n=t,t.prototype.readAscending=function(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending},t.prototype.readMethod=function(e,t){return function(e){var t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return c.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)},t.prototype.readOperation=function(e,t){var r=t.mosaicOperation,n=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=r||(n?p.toJSON(n):null);return p.fromJSON(i)||"first"},t.prototype.castSortValue=function(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e},t.prototype.clone=function(){return new n({ascending:this.ascending,itemRenderingRule:o.clone(this.itemRenderingRule),lockRasterIds:o.clone(this.lockRasterIds),method:this.method,multidimensionalDefinition:o.clone(this.multidimensionalDefinition),objectIds:o.clone(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:o.clone(this.viewpoint),where:this.where})},r.__decorate([a.property({type:Boolean,json:{write:!0}})],t.prototype,"ascending",void 0),r.__decorate([a.reader("ascending",["ascending","sortAscending"])],t.prototype,"readAscending",null),r.__decorate([a.property({type:u,json:{write:!0}})],t.prototype,"itemRenderingRule",void 0),r.__decorate([a.property({type:[Number],json:{write:{overridePolicy:function(){return{enabled:"lock-raster"===this.method}}}}})],t.prototype,"lockRasterIds",void 0),r.__decorate([a.property({type:String,json:{type:c.jsonValues,write:{target:"mosaicMethod",writer:c.write}}})],t.prototype,"method",void 0),r.__decorate([a.reader("method",["mosaicMethod","defaultMosaicMethod"])],t.prototype,"readMethod",null),r.__decorate([a.property({type:[l],json:{write:!0}})],t.prototype,"multidimensionalDefinition",void 0),r.__decorate([a.property({type:[Number],json:{read:{source:"fids"},write:{target:"fids"}}})],t.prototype,"objectIds",void 0),r.__decorate([a.property({json:{type:p.jsonValues,read:{reader:p.read},write:{target:"mosaicOperation",writer:p.write}}})],t.prototype,"operation",void 0),r.__decorate([a.reader("operation",["mosaicOperation","mosaicOperator"])],t.prototype,"readOperation",null),r.__decorate([a.property({type:String,json:{write:{overridePolicy:function(){return{enabled:"attribute"===this.method}}}}})],t.prototype,"sortField",void 0),r.__decorate([a.property({type:[String,Number],json:{write:{allowNull:!0,overridePolicy:function(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],t.prototype,"sortValue",void 0),r.__decorate([a.cast("sortValue")],t.prototype,"castSortValue",null),r.__decorate([a.property({type:s,json:{write:!0}})],t.prototype,"viewpoint",void 0),r.__decorate([a.property({type:String,json:{write:!0}})],t.prototype,"where",void 0),n=r.__decorate([a.subclass("esri.layers.support.MosaicRule")],t)}(i.JSONSupport)}.apply(null,n))||(e.exports=i)},421:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(155),r(118),r(151),r(179)],void 0===(i=function(e,t,r,n,i,o,a){return function(e){function t(t){var r=e.call(this,t)||this;return r.variableName=null,r.dimensionName=null,r.values=[],r.isSlice=!1,r}var n;return r.__extends(t,e),n=t,t.prototype.clone=function(){return new n({variableName:this.variableName,dimensionName:this.dimensionName,values:i.clone(this.values),isSlice:this.isSlice})},r.__decorate([o.property({type:String,json:{write:!0}})],t.prototype,"variableName",void 0),r.__decorate([o.property({type:String,json:{write:!0}})],t.prototype,"dimensionName",void 0),r.__decorate([o.property({type:a.types.array(a.types.oneOf([a.types.native(Number),a.types.array(a.types.native(Number))])),json:{write:!0}})],t.prototype,"values",void 0),r.__decorate([o.property({type:Boolean,json:{write:!0}})],t.prototype,"isSlice",void 0),n=r.__decorate([o.subclass("esri.layers.support.DimensionalDefinition")],t)}(n.JSONSupport)}.apply(null,n))||(e.exports=i)},422:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(399),r(180),r(118),r(313),r(461),r(549),r(630)],void 0===(i=function(e,t,r,n,i,o,a,s,l){Object.defineProperty(t,"__esModule",{value:!0});var u={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},p={type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]},c=l.fromJSON(a.PREDEFINED_JSON_COLOR_RAMPS[0]);t.isSupportedRendererType=function(e){return["raster-stretch","unique-value","class-breaks","raster-shaded-relief"].indexOf(e.type)>-1},t.combineRenderingRules=function(e,t){if(!e||!t)return i.clone(e||t);var r=i.clone(e);return"none"!==t.functionName.toLowerCase()&&((function e(t){var r=t.Raster;return r&&"esri.layers.support.RasterFunction"===r.declaredClass?e(r.functionArguments):t}(r.functionArguments)).Raster=t),r},t.convertRendererToRenderingRule=function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){var r=new o;r.functionName="Stretch";var n=d[s.stretchTypeJSONDict.toJSON(e.stretchType)],i={StretchType:n,Statistics:function(e){var t=[];return e.forEach((function(e){var r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;var n=[r.min,r.max,r.avg||0,r.stddev||0];t.push(n)}})),t}(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(i.Min=e.outputMin),null!=e.outputMax&&(i.Max=e.outputMax),n===d.standardDeviation?(i.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType="u8"):n===d.percentClip?(i.MinPercent=e.minPercent,i.MaxPercent=e.maxPercent,r.outputPixelType="u8"):n===d.minMax?r.outputPixelType="u8":n===d.sigmoid&&(i.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=i,r.variableName="Raster",e.colorRamp){var l=e.colorRamp,u=new o,p=a.getColorRampName(l);return p?u.functionArguments={colorRamp:p}:!t.convertColorRampToColormap||"algorithmic"!==l.type&&"multipart"!==l.type?u.functionArguments={colorRamp:e.colorRamp.toJSON()}:u.functionArguments={Colormap:a.convertColorRampToColormap(l,256)},u.variableName="Raster",u.functionName="Colormap",u.functionArguments.Raster=r,u}return r}(e,t);case"class-breaks":return function(e,t){var r=[],n=[],i=[],a=[],s=t.pixelType,l=t.rasterAttributeTable,u=l&&l.features,p=y(l);if(u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach((function(t,r){var n,i=t.symbol.color;i.a&&u.forEach((function(o){((n=o.attributes[e.field])>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&a.push([o.attributes[p],i.r,i.g,i.b])}))}));var c=s?f(a,s):a,d=new o;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=c,d.variableName="Raster",d}e.classBreakInfos.forEach((function(e,t){var o=e.symbol&&e.symbol.color;o.a?(0===t?r.push(e.minValue,e.maxValue+1e-6):r.push(e.minValue+1e-6,e.maxValue+1e-6),n.push(t),a.push([t,o.r,o.g,o.b])):i.push(e.minValue,e.maxValue)}));var m=s?f(a,s):a,h=new o;h.functionName="Remap",h.functionArguments={InputRanges:r,OutputValues:n,NoDataRanges:i},h.variableName="Raster";var _=new o;return _.functionName="Colormap",_.functionArguments={Colormap:m,Raster:h},_}(e,t);case"unique-value":return function(e,t){var r=[],n=t.pixelType,i=t.rasterAttributeTable,a=i&&i.features,s=y(i),l=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach((function(t){var n=t.symbol.color;n.a&&(e.field!==s&&a?a&&a.forEach((function(i){String(i.attributes[e.field])===String(t.value)&&r.push([i.attributes[s],n.r,n.g,n.b])})):isNaN(t.value)?l=!0:r.push([t.value,n.r,n.g,n.b]))})),l)return null;var u=n&&r.length>0?f(r,n):r,p=new o;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",p}(e,t);case"raster-colormap":return function(e,t){var r=e.extractColormap();if(r&&0!==r.length){var n=t.pixelType,i=n?f(r,n):r,a=new o;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=i,a}}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new o;var r=new o;r.functionName="Hillshade";var n="traditional"===e.hillshadeType?0:1,i="none"===e.scalingType?1:3,s={HillshadeType:n,SlopeType:i,ZFactor:e.zFactor};return 0===n&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===i&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",s.Colormap=a.convertColorRampToColormap(e.colorRamp,256)),r}(e,t)}},t.createDefaultRenderer=function(e,t){if(e){var n,i,o,s,l,u,d,f=e.attributeTable,y=e.dataType,m=e.bandCount,h=e.pixelType,_=e.colormap,g=e.statistics,v=e.histograms;if(t&&t.length>0&&(g=g?t.map((function(e){return g[e]})):null,v=v?t.map((function(e){return v[e]})):null),f&&(i=f.fields.filter((function(e){return"red"===e.name.toLowerCase()}))[0],o=f.fields.filter((function(e){return"green"===e.name.toLowerCase()}))[0],s=f.fields.filter((function(e){return"blue"===e.name.toLowerCase()}))[0],u=f.fields.filter((function(e){return"value"===e.name.toLowerCase()}))[0],(l=f.fields.filter((function(e){return"classname"===e.name.toLowerCase()||"class_name"===e.name.toLowerCase()}))[0])||(l=f.fields.filter((function(e){return"string"===e.type}))[0])||(l=u)),1===m&&(null==_?void 0:_.length)>0)f&&i&&o&&s&&(d={},f.features.forEach((function(e){var t=e.attributes;d[t[u.name]]=l?t[l.name]:t[u.name]}))),n=r.RasterColormapRenderer.createFromColormap(_,d);else if(1===m&&f){var b=void 0,w=f.features;if(i&&o&&s&&l)b=w.map((function(e){return{value:e.attributes[l.name],label:e.attributes[l.name],symbol:{type:"esriSFS",style:"esriSFSSolid",color:[e.attributes[i.name],e.attributes[o.name],e.attributes[s.name],255]}}}));else{var R=a.convertColorRampToColormap(c,w.length);b=w.map((function(e,t){return{value:e.attributes[u.name],label:e.attributes[u.name],symbol:{color:R[t].slice(1,4),type:"esriSFS",style:"esriSFSSolid"}}}))}b.sort((function(e,t){return e.value>t.value?1:-1})),n=r.UniqueValueRenderer.fromJSON({field1:l.name,uniqueValueInfos:b})}if(!n){var x=void 0,S=!1,I=void 0,N=void 0,O=void 0;"u8"===h&&"processed"===y?(x="none",g=1===m?[{min:0,max:255}]:[{min:0,max:255},{min:0,max:255},{min:0,max:255}]):"u8"===h||"elevation"===y?(x="min-max",S=!g):"scientific"===y?(x="min-max",S=!g,I=p):v&&v.length>0?(x="percent-clip",O=N=.25):g?x="min-max":(x="percent-clip",S=!0),n=r.RasterStretchRenderer.fromJSON({stretchType:x,dra:S,colorRamp:I,min:0,max:255,statistics:S?null:g,histograms:S?null:v,maxPercent:N,minPercent:O})}return n}},t.getDefaultBandCombination=function(e){var t=e.bandCount;if(1===t)return null;if(2===t)return[0];var r,n,i,o,a,s=e.keyProperties&&e.keyProperties.BandProperties;if(s&&s.length===t){for(var l=0;l<s.length;l++)s[l].BandName&&"red"===s[l].BandName.toLowerCase()&&(n=l),s[l].BandName&&"green"===s[l].BandName.toLowerCase()&&(i=l),s[l].BandName&&"blue"===s[l].BandName.toLowerCase()&&(o=l),s[l].BandName&&"nearinfrared"===s[l].BandName.toLowerCase()&&(a=l);void 0!==n&&void 0!==i&&void 0!==o?r=[n,i,o]:void 0!==n&&void 0!==i&&void 0!==a&&(r=[a,n,i])}return!r&&t>3&&(r=[0,1,2]),r};var d={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function f(e,t){var r=u[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function y(e){if(e){var t=e.fields,r=t&&n.find(t,(function(e){return e&&e.name&&"value"===e.name.toLowerCase()}));return r&&r.name}}}.apply(null,n))||(e.exports=i)},460:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(297),r(152),r(225),r(153),r(151),r(208),r(689),r(339),r(244),r(240),r(298),r(265),r(410),r(233),r(411)],void 0===(i=function(e,t,r,n,i,o,a,s,l,u,p,c,d,f,y,m,h,_){return function(e){function t(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var n=e.apply(this,t)||this;return n.legendEnabled=!0,n.isReference=null,n.operationalLayerType="ArcGISImageServiceLayer",n.popupEnabled=!0,n.popupTemplate=null,n.type="imagery",n}return r.__extends(t,e),t.prototype.normalizeCtorArgs=function(e,t){return"string"==typeof e?r.__assign({url:e},t):e},t.prototype.load=function(e){var t=this,r=i.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((function(){return t._fetchService(r)}),(function(){return t._fetchService(r)}))),a.resolve(this)},Object.defineProperty(t.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0}),t.prototype.createPopupTemplate=function(e){var t=this.rasterFields,n=this.title,i=new Set,o=!1,a=!1;this.capabilities&&(a=(o=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0)&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));var s=new Set;o&&(s.add("raster.itempixelvalue"),a&&s.add("raster.magnitude").add("raster.direction"));for(var l=0,u=t;l<u.length;l++){var p=u[l],c=p.name.toLowerCase();s.has(c)||c.indexOf("raster.servicepixelvalue.")>-1||i.add(p.name)}return _.createPopupTemplate({fields:t,title:n},r.__assign(r.__assign({},e),{visibleFieldNames:i}))},t.prototype.redraw=function(){this.emit("redraw")},r.__decorate([s.property(h.legendEnabled)],t.prototype,"legendEnabled",void 0),r.__decorate([s.property({type:["show","hide"]})],t.prototype,"listMode",void 0),r.__decorate([s.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:function(){return{enabled:!1}}}}})],t.prototype,"isReference",void 0),r.__decorate([s.property({type:["ArcGISImageServiceLayer"]})],t.prototype,"operationalLayerType",void 0),r.__decorate([s.property(h.popupEnabled)],t.prototype,"popupEnabled",void 0),r.__decorate([s.property({type:n,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],t.prototype,"popupTemplate",void 0),r.__decorate([s.property({readOnly:!0,dependsOn:["fields","title"]})],t.prototype,"defaultPopupTemplate",null),r.__decorate([s.property({readOnly:!0,json:{read:!1}})],t.prototype,"type",void 0),r.__decorate([s.subclass("esri.layers.ImageryLayer")],t)}(m.TemporalLayer(f.RefreshableLayer(y.ScaleRangeLayer(c.OperationalLayer(d.PortalLayer(u.ArcGISImageService(p.ArcGISService(o.MultiOriginJSONMixin(l)))))))))}.apply(null,n))||(e.exports=i)},550:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(154),r(153),r(305),r(267)],void 0===(i=function(e,t,r,n,i,o,a){return function(){function e(){this._workerThread=null,this._destroyed=!1}return e.prototype.initialize=function(){return r.__awaiter(this,void 0,void 0,(function(){var e;return r.__generator(this,(function(t){switch(t.label){case 0:return[4,o.open("RasterWorker")];case 1:return e=t.sent(),this._destroyed?e.close():this._workerThread=e,[2]}}))}))},e.prototype.destroy=function(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)},e.prototype.decode=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i;return r.__generator(this,(function(r){switch(r.label){case 0:if(!this._workerThread)throw new n("raster-jobhandler:no-connection","no available worker connection");return[4,this._workerThread.invoke("decode",e,t)];case 1:return[2,(i=r.sent())?new a(i):null]}}))}))},e.prototype.symbolize=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,o;return r.__generator(this,(function(r){switch(r.label){case 0:if(!this._workerThread)throw new n("raster-jobhandler:no-connection","no available worker connection");return i={extent:e.extent&&e.extent.toJSON(),pixelBlock:e.pixelBlock.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},[4,this._workerThread.invoke("symbolize",i,t)];case 1:return[2,(o=r.sent())?new a(o):null]}}))}))},e.prototype.updateSymbolizer=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var o;return r.__generator(this,(function(r){switch(r.label){case 0:if(!this._workerThread)throw new n("raster-jobhandler:no-connection","no available worker connection");return o=e&&e.renderer&&"raster-stretch"===e.renderer.type&&e.renderer.histograms,[4,i.all(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:o},t))];case 1:return r.sent(),[2]}}))}))},e.prototype.stretch=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,o;return r.__generator(this,(function(r){switch(r.label){case 0:if(!this._workerThread)throw new n("raster-jobhandler:no-connection","no available worker connection");return e&&e.pixelBlock?(i={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},[4,this._workerThread.invoke("stretch",i,t)]):[2,null];case 1:return[2,(o=r.sent())?new a(o):null]}}))}))},e.prototype.mosaicAndTransform=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,o;return r.__generator(this,(function(s){switch(s.label){case 0:if(!this._workerThread)throw new n("raster-jobhandler:no-connection","no available worker connection");return e&&e.srcPixelBlocks&&e.srcPixelBlocks.length>0?(i=r.__assign(r.__assign({},e),{srcPixelBlocks:e.srcPixelBlocks.map((function(e){return e?e.toJSON():null}))}),[4,this._workerThread.invoke("mosaicAndTransform",i,t)]):[2,null];case 1:return[2,(o=s.sent())?new a(o):null]}}))}))},e}()}.apply(null,n))||(e.exports=i)},689:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(159),r(174),r(399),r(165),r(154),r(166),r(118),r(156),r(152),r(153),r(172),r(151),r(179),r(233),r(421),r(690),r(194),r(255),r(422),r(400),r(267),r(313),r(423),r(550),r(603),r(604),r(693),r(463),r(187),r(696),r(199)],void 0===(i=function(e,t,r,n,i,o,a,s,l,u,p,c,d,f,y,m,h,_,g,v,b,w,R,x,S,I,N,O,T,P,j,C,F,M){Object.defineProperty(t,"__esModule",{value:!0});var D=p.getLogger("esri.layers.mixins.ArcGISImageService"),J=l.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),A=l.strict()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),V=l.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"});t.ArcGISImageService=function(e){return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._functionRasterInfos={},t._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},t._symbolizer=null,t._defaultServiceMosaicRule=null,t.rasterAttributeTableFieldPrefix="Raster.",t.adjustAspectRatio=null,t.bandCount=null,t.bandIds=void 0,t.capabilities=null,t.compressionQuality=void 0,t.compressionTolerance=.01,t.copyright=null,t.definitionExpression=null,t.exportImageServiceParameters=null,t.rasterInfo=null,t.fields=null,t.fullExtent=null,t.hasMultidimensions=!1,t.imageMaxHeight=4100,t.imageMaxWidth=4100,t.interpolation=void 0,t.multidimensionalInfo=null,t.noData=null,t.noDataInterpretation=void 0,t.objectIdField=null,t.pixelSizeX=null,t.pixelSizeY=null,t.pixelFilter=null,t.raster=void 0,t.viewId=void 0,t.renderer=null,t.rasterAttributeTable=null,t.rasterFunctionInfos=null,t.serviceDataType=null,t.spatialReference=null,t.pixelType=null,t.serviceRasterInfo=null,t.sourceJSON=null,t.url=null,t.version=null,t}return r.__extends(t,e),t.prototype.initialize=function(){this._set("exportImageServiceParameters",new g.ExportImageServiceParameters({layer:this}))},t.prototype.readDefaultServiceMosaicRule=function(e,t){return R.fromJSON(t)},Object.defineProperty(t.prototype,"rasterFunctionNamesIndex",{get:function(){var e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((function(t){e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"queryTask",{get:function(){return new j({url:this.url})},enumerable:!0,configurable:!0}),t.prototype.readBandIds=function(e,t){if(Array.isArray(e)&&e.length>0&&e.every((function(e){return"number"==typeof e})))return e},t.prototype.readCapabilities=function(e,t){return this._readCapabilities(t)},t.prototype.writeCompressionQuality=function(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)},t.prototype.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},Object.defineProperty(t.prototype,"fieldsIndex",{get:function(){return this.fields?new b(this.fields):null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"format",{get:function(){return this._get("format")||(null!=this.pixelFilter?"lerc":"jpgpng")},set:function(e){e&&["png","png8","png24","png32","jpg","bmp","jpgpng","lerc","tiff"].indexOf(e.toLowerCase())>-1&&this._set("format",e.toLowerCase())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"mosaicRule",{set:function(e){var t=e;t&&t.mosaicMethod&&(t=R.fromJSON(r.__assign(r.__assign({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)},enumerable:!0,configurable:!0}),t.prototype.readMosaicRule=function(e,t){return R.fromJSON(e||t.mosaicRule||t)},t.prototype.writeMosaicRule=function(e,t,r){var n=this.mosaicRule,i=this.definitionExpression;n?i&&i!==n.where&&((n=n.clone()).where=i):i&&(n=new R({where:i})),this._isValidCustomizedMosaicRule(n)&&(t[r]=n.toJSON())},t.prototype.writeNoData=function(e,t,r){null!=e&&"number"==typeof e&&(t[r]=e)},t.prototype.readObjectIdField=function(e,t){if(!e){var r=t.fields.filter((function(e){return"esriFieldTypeOID"===e.type||"oid"===e.type}));e=r&&r[0]&&r[0].name}return e},Object.defineProperty(t.prototype,"parsedUrl",{get:function(){return this.url?f.urlToObject(this.url):null},enumerable:!0,configurable:!0}),t.prototype.readRenderer=function(e,t,r){var n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,i=o.read(n,r)||void 0;if(null!=i)return w.isSupportedRendererType(i)||D.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),i},Object.defineProperty(t.prototype,"rasterFields",{get:function(){var e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new v({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new v({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new v({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=this.fields?u.clone(this.fields):[];i.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&i.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((function(e){return"none"===e.name.toLowerCase()}))&&i.push(n),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((function(e){return"none"!==e.name.toLowerCase()})).forEach((function(e){i.push(new v({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(i.push(new v({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),i.push(new v({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));var o=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(o&&o.length>0){var a=o.filter((function(e){return"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()})).map((function(t){var r=u.clone(t);return r.name=e+t.name,r}));i=i.concat(a)}return i},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"renderingRule",{set:function(e){var t=e;t&&t.rasterFunction&&(t=S.fromJSON(r.__assign(r.__assign({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)},enumerable:!0,configurable:!0}),t.prototype.readRenderingRule=function(e,t){var r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?S.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null},t.prototype.writeRenderingRule=function(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())},t.prototype.readSpatialReference=function(e,t){var r=e||t.extent.spatialReference;return r?n.SpatialReference.fromJSON(r):null},t.prototype.readPixelType=function(e){return V.fromJSON(e)||e},t.prototype.writePixelType=function(e,t,r){(c.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=V.toJSON(e))},t.prototype.readVersion=function(e,t){var r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r},t.prototype.applyFilter=function(e){var t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t},t.prototype.applyRenderer=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var n,i,o,a,s;return r.__generator(this,(function(l){switch(l.label){case 0:return n=e,this._isPicture()||!this.renderer||!this._symbolizer||this.pixelFilter?[3,5]:(i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),o=this._rasterJobHandler.instance,a=this.bandIds,o?i?(this._symbolizer.bind(),[4,o.updateSymbolizer(this._symbolizer,t)]):[3,2]:[3,4]);case 1:l.sent(),this._cachedRendererJson=this.renderer.toJSON(),l.label=2;case 2:return[4,o.symbolize(r.__assign({bandIds:a},e),t)];case 3:return s=l.sent(),n={extent:e.extent,pixelBlock:s},[3,5];case 4:n={extent:e.extent,pixelBlock:this._symbolizer.symbolize(r.__assign({bandIds:a},e))},l.label=5;case 5:return[2,n]}}))}))},t.prototype.destroy=function(){this._shutdownJobHandler()},t.prototype.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},t.prototype.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},t.prototype.fetchImage=function(e,t,r,n){var i=this;if(void 0===n&&(n={}),null==e||null==t||null==r)return d.reject(new s("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));var o=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:n.signal}):null;return d.when(o).then((function(o){o&&(i.rasterInfo=o);var a={imageServiceParameters:i.getExportImageServiceParameters(e,t,r,n.timeExtent),imageProps:{extent:e,width:t,height:r,format:i.format},requestAsImageElement:n.requestAsImageElement&&!i.pixelFilter||!1,signal:n.signal};return i._requestArrayBuffer(a)}))},t.prototype.fetchKeyProperties=function(e){var t=e&&e.renderingRule&&e.renderingRule.toJSON();return a(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((function(e){return e.data}))},t.prototype.fetchRasterAttributeTable=function(e){var t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?d.reject(new s("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):a(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((function(e){return C.fromJSON(e.data)}))},t.prototype.getCatalogItemRasterInfo=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,o,s,l,u;return r.__generator(this,(function(p){switch(p.label){case 0:return i=a(this.parsedUrl.path+"/"+e+"/info",r.__assign({query:this._getQueryParams()},t)).then((function(e){return e.data})),o=a(this.parsedUrl.path+"/"+e+"/info/keyProperties",r.__assign({query:this._getQueryParams()},t)).then((function(e){return e.data})).catch((function(){})),[4,d.all([i,o])];case 1:return(s=p.sent())[0]?(l=n.Extent.fromJSON(s[0].extent),u=s[0].statistics?s[0].statistics.map((function(e){return{min:e[0],max:e[1],avg:e[2],stddev:e[3]}})):null,[2,new I({bandCount:s[0].bandCount,extent:l,spatialReference:l.sr,pixelSize:new n.Point({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:l.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:u,histograms:s[0].histograms,keyProperties:s[1]})]):[2,void 0]}}))}))},t.prototype.getCatalogItemICSInfo=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var i,o,s,l,u,p,c,f,y,m,h,_,g,v,b,w,R,x,S,I,N,O,T,P,j,C,F,M,D,J;return r.__generator(this,(function(A){switch(A.label){case 0:return[4,a(this.parsedUrl.path+"/"+e+"/info/ics",r.__assign({query:this._getQueryParams()},t))];case 1:if(i=A.sent().data,!(o=i&&i.ics))return[2,void 0];s=null,A.label=2;case 2:return A.trys.push([2,4,,5]),[4,a(this.parsedUrl.path+"/"+e+"/info",r.__assign({query:this._getQueryParams()},t))];case 3:return l=A.sent(),s=l.data.extent,[3,5];case 4:return A.sent(),[3,5];case 5:if(!s||!s.spatialReference)return[2,{ics:o,icsToPixelTransform:null,icsExtent:null,northDirection:null}];for(u=this.version>=10.7?a(this.parsedUrl.path+"/"+e+"/info/icstopixel",r.__assign({query:this._getQueryParams()},t)).then((function(e){return e.data})).catch((function(){return{}})):{},p=s.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:p.wkid||p,outSR:"0:"+e},f=a(this.parsedUrl.path+"/project",r.__assign({query:this._getQueryParams(c)},t)).then((function(e){return e.data})).catch((function(){return{}})),y=5,m=(s.xmin+s.xmax)/2,h=(s.ymax-s.ymin)/(y+1),_=s.ymin+h,g=[],C=0;C<y;C++)g.push({x:m,y:_+h*C});return v={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:g}),inSR:p.wkid||p,outSR:"0:"+e},b=a(this.parsedUrl.path+"/project",r.__assign({query:this._getQueryParams(v)},t)).then((function(e){return e.data})).catch((function(){return{}})),[4,d.all([u,f,b])];case 6:if(w=A.sent(),null==(R=w[0].ipxf)&&(x=o.geodataXform&&o.geodataXform.xf_0)&&"topup"===x.name.toLowerCase()&&(R={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}}),(S=n.Extent.fromJSON(w[1]&&w[1].geometries&&w[1].geometries[0]))&&(S.spatialReference=new n.SpatialReference({wkid:0,imageCoordinateSystem:o})),I=w[2].geometries?w[2].geometries.filter((function(e){return null!=e})):[],(N=I.length)<3)return[2,{ics:o,icsToPixelTransform:R,icsExtent:S,northDirection:null}];for(O=0,T=0,P=0,j=0,C=0;C<N;C++)O+=I[C].x,T+=I[C].y,P+=I[C].x*I[C].x,j+=I[C].x*I[C].y;return F=(N*j-O*T)/(N*P-O*O),M=0,D=I[y-1].x>I[0].x,J=I[y-1].y>I[0].y,F===1/0?M=J?90:270:0===F?M=D?0:180:F>0?M=D?180*Math.atan(F)/Math.PI:180*Math.atan(F)/Math.PI+180:F<0&&(M=J?180+180*Math.atan(F)/Math.PI:360+180*Math.atan(F)/Math.PI),[2,{ics:o,icsToPixelTransform:R,icsExtent:S,northDirection:M}]}}))}))},t.prototype.generateRasterInfo=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var n,i;return r.__generator(this,(function(r){switch(r.label){case 0:if((!e||"none"===e.functionName.toLowerCase())&&c.isSome(this.serviceRasterInfo))return[2,this.serviceRasterInfo];if(n=function(e){if(!e)return null;var t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((function(e){return e.replace('"rasterFunction":"',"").replace('"',"")}));return r?r.join("/"):null}(e),this._functionRasterInfos[n])return[2,this._functionRasterInfos[n]];i=this._generateRasterInfo(e,t),this._functionRasterInfos[n]=i,r.label=1;case 1:return r.trys.push([1,3,,4]),[4,i];case 2:return[2,r.sent()];case 3:return r.sent(),this._functionRasterInfos[n]=null,[2,null];case 4:return[2]}}))}))},t.prototype.getExportImageServiceParameters=function(e,t,n,i){var o,a=(e=e.clone().shiftCentralMeridian()).spatialReference;if(a.imageCoordinateSystem){var s=a.imageCoordinateSystem,l=s.id,u=s.referenceServiceName;o=null!=l?u?this.parsedUrl.path.toLowerCase().indexOf("/"+u.toLowerCase()+"/")>-1?"0:"+l:JSON.stringify({icsid:l,icsns:u}):"0:"+l:JSON.stringify({ics:a.imageCoordinateSystem})}else o=a.wkid||JSON.stringify(a.toJSON());c.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);var p=this.exportImageServiceParameters.toJSON(),d=p.bandIds,f=p.noData,y=p.mosaicRule,m=p.renderingRule;d instanceof Array&&d.length>0&&(p.bandIds=d.join(",")),f instanceof Array&&f.length>0&&(p.noData=f.join(","));var h=this.timeInfo;y&&y.multidimensionalDefinition&&i&&h&&h.startField&&(y.multidimensionalDefinition=y.multidimensionalDefinition.filter((function(e){return e.dimensionName!==h.startField}))),p.mosaicRule=y&&JSON.stringify(y),p.renderingRule=m&&JSON.stringify(m);var _={};if(i){var g=i.toJSON(),v=g.start,b=g.end;v&&b&&v===b?_.time=""+v:null==v&&null==b||(_.time=(null==v?"null":v)+","+(null==b?"null":b))}return r.__assign(r.__assign({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:o,imageSR:o,size:t+","+n},p),_)},t.prototype.queryRasters=function(e){return this.queryTask.execute(e)},t.prototype.queryVisibleRasters=function(e,t){var r=this;if(!e)return d.reject(new s("imagery-layer: query-visible-rasters","missing query parameter"));var i=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1},o=i.pixelSize,a=i.returnDomainValues,l=i.returnTopmostRaster,u=i.showNoDataRecords,p=!1,c=null,f=null,y=this.rasterFunctionNamesIndex;if(e.outFields&&(p=e.outFields.some((function(e){return-1===e.toLowerCase().indexOf("raster.servicepixelvalue")})),this.version>=10.4)){var m=e.outFields.filter((function(e){return e.toLowerCase().indexOf("raster.servicepixelvalue")>-1&&e.length>"raster.servicepixelvalue".length})).map((function(e){var t=e.slice("raster.servicepixelvalue".length+1);return[r._updateRenderingRulesFunctionName(t,y),t]}));c=m.map((function(e){return new S({functionName:e[0]})})),f=m.map((function(e){return e[1]})),0===c.length?this.renderingRule?(c.push(this.renderingRule),f.push(this.renderingRule.functionName)):c=null:this.renderingRule&&!c.some((function(e){return e.functionName===r.renderingRule.functionName}))&&(c.push(this.renderingRule),f.push(this.renderingRule.functionName))}var h=!e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),_=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:c,pixelSize:o,returnCatalogItems:p,returnGeometry:h,maxItemCount:l?1:null});delete _.f;var g=new F(_),v=new P({url:this.url}),b=this.generateRasterInfo(this.renderingRule);return d.create((function(t){b.then((function(){v.execute(g).then((function(i){var o=e.outFields;if(p&&!h&&i.catalogItems&&i.catalogItems.features&&i.catalogItems.features.length>0){var l=r.objectIdField||"ObjectId",c=i.catalogItems.features,d=c.map((function(e){return e.attributes&&e.attributes[l]})),y=new M({objectIds:d,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]});return r.queryRasters(y).then((function(s){s&&s.features&&s.features.length>0&&s.features.forEach((function(t){c.forEach((function(r){r.attributes[l]===t.attributes[l]&&(r.geometry=new n.Polygon(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),t(r._processVisibleRastersResponse(i,{returnDomainValues:a,templateRRFunctionNames:f,showNoDataRecords:u,templateFields:o}))})).catch((function(){throw new s("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}t(r._processVisibleRastersResponse(i,{returnDomainValues:a,templateRRFunctionNames:f,showNoDataRecords:u,templateFields:o}))})).catch((function(){throw new s("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))},t.prototype._fetchService=function(e){var t;return r.__awaiter(this,void 0,void 0,(function(){var n,i,o,l,u,p,f=this;return r.__generator(this,(function(r){switch(r.label){case 0:return(n=this.sourceJSON)?[3,2]:[4,a(this.parsedUrl.path,{query:this._getQueryParams(),signal:e})];case 1:i=r.sent(),o=i.data,l=i.ssl,n=o,this.sourceJSON=n,l&&(this.url=this.url.replace(/^http:/i,"https:")),r.label=2;case 2:if((null===(t=n.capabilities)||void 0===t?void 0:t.toLowerCase().split(",").map((function(e){return e.trim()})).indexOf("tilesonly"))>-1)throw new s("imagery-layer:fetch-metadata","use ImageryTileLayer to open tiles-only image services");return this.read(n,{origin:"service",url:this.parsedUrl}),c.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo),u=c.isSome(this.serviceRasterInfo)?d.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:n,signal:e}).then((function(e){return f._set("serviceRasterInfo",e),e})),p=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null,[2,d.all([u,p]).then((function(e){e[1]?f._set("rasterInfo",e[1]):f._set("rasterInfo",e[0]),f._configDefaultRenderer(),f.watch("renderer",(function(){return f._configDefaultRenderer()})),f.watch("renderingRule",(function(e){(f.renderer||f._symbolizer||f.popupEnabled&&f.popupTemplate)&&f.generateRasterInfo(e).then((function(e){e&&(f.rasterInfo=e)}))}));var t=c.isSome(f.serviceRasterInfo)&&f.serviceRasterInfo.multidimensionalInfo;t&&f._updateMultidimensionalDefinition(t)}))]}}))}))},t.prototype._initJobHandler=function(){return r.__awaiter(this,void 0,void 0,(function(){var e,t=this;return r.__generator(this,(function(r){switch(r.label){case 0:return null!=this._rasterJobHandler.connectionPromise?[2,this._rasterJobHandler.connectionPromise]:(e=new N,this._rasterJobHandler.connectionPromise=e.initialize().then((function(){t._rasterJobHandler.instance=e}),(function(){return null})),[4,this._rasterJobHandler.connectionPromise]);case 1:return r.sent(),[2]}}))}))},t.prototype._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0},t.prototype._isPicture=function(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1},t.prototype._configDefaultRenderer=function(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){var e=w.getDefaultBandCombination(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}this.renderer||(this.renderer=w.createDefaultRenderer(this.rasterInfo,this.bandIds)),this._symbolizer?(this._symbolizer.renderer=this.renderer,this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new T({renderer:this.renderer,rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}},t.prototype._clonePixelData=function(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}},t.prototype._getQueryParams=function(e){var t=this.raster,n=this.viewId;return r.__assign({raster:t,viewId:n,f:"json"},e)},t.prototype._decodePixelBlock=function(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):O.decode(e,t,r)},t.prototype._fetchAuxiliaryRasterInfo=function(e){var t=e&&e.serviceInfo;if(!t)return d.reject(new s("imagery-layer:fetch-metadata","valid serviceInfo is required"));var r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,o=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&a(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((function(e){return C.fromJSON(e.data)})).catch((function(){return null})),l=!!(t.hasColormap&&this.version>=10.1)&&a(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((function(e){return e.data&&e.data.colormap})),u=!!(t.hasHistograms&&this.version>=10.1)&&a(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((function(e){return e.data&&e.data.histograms})),p=this.version>=10.3&&a(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((function(e){return e.data})).catch((function(){})),c=!!(t.hasMultidimensions&&this.version>=10.3)&&a(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:i}).then((function(e){return e.data&&e.data.multidimensionalInfo}));return d.all([o,l,u,p,c]).then((function(e){var r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(var i=0;i<t.minValues.length;i++)r.push({min:t.minValues[i],max:t.maxValues[i],avg:t.meanValues[i],stddev:t.stdvValues[i]})}var o=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=n.SpatialReference.fromJSON(t.spatialReference||t.extent.spatialReference);return new I({width:o,height:a,bandCount:t.bandCount,extent:n.Extent.fromJSON(t.extent),spatialReference:s,pixelSize:new n.Point({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||null,multidimensionalInfo:e[4]||null})}))},t.prototype._requestArrayBuffer=function(e){var t=this,n=e.imageProps,i=e.requestAsImageElement,o=e.signal;if(i&&!this.pixelFilter&&n.format&&n.format.indexOf("png")>-1)return a(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(r.__assign({f:"image"},e.imageServiceParameters)),signal:o}).then((function(e){return{imageElement:e.data,params:n}}));var l=this._initJobHandler(),u=a(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(r.__assign({f:"image"},e.imageServiceParameters)),signal:o});return d.all([u,l]).then((function(e){var i=e[0].data,a=n.format||"jpgpng",l=a;if("bsq"!==l&&"bip"!==l&&(l=O.getFormat(i)),!l)throw new s("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(i)));var u=a.indexOf("png")>-1&&("png"===l||"jpg"===l),p={signal:o};return u?O.decode(i,r.__assign({useCanvas:!0},n),p).then((function(e){return{pixelData:{pixelBlock:e,extent:n.extent},params:n}})):t._decodePixelBlock(i,{width:n.width,height:n.height,planes:null,pixelType:null,noDataValue:null,format:a},p).then((function(e){return{pixelData:{pixelBlock:e,extent:n.extent},params:n}}))}))},t.prototype._generateRasterInfo=function(e,t){return r.__awaiter(this,void 0,void 0,(function(){var n;return r.__generator(this,(function(i){switch(i.label){case 0:return[4,a(this.parsedUrl.path,r.__assign({query:this._getQueryParams({renderingRule:e})},t))];case 1:return n=i.sent().data,[4,this._fetchAuxiliaryRasterInfo(r.__assign({serviceInfo:n,renderingRule:e},t))];case 2:return[2,i.sent()]}}))}))},t.prototype._isValidCustomizedMosaicRule=function(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())},t.prototype._updateMultidimensionalDefinition=function(e){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var t=e.variables[0].dimensions,r=[];for(var n in t)if(t.hasOwnProperty(n)){var i=t[n],o=i.extent,a=!0,s=[o[0]];i.hasRanges&&!0===i.hasRanges?(a=!1,s=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(o[1])<=Math.abs(o[0])&&(s=[o[1]]),r.push(new _({variableName:"",dimensionName:t[n].name,isSlice:a,values:s}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new R;var l=this.mosaicRule.multidimensionalDefinition;(!l||l&&l.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}},t.prototype._formatAttributeValue=function(e,t){if("string"==typeof e){var r=this.popupTemplate&&this.popupTemplate.fieldInfos,n=this._getFieldInfo(r,t),i=n&&n.format;if(i){var o=void 0,a=void 0;return e.trim().indexOf(",")>-1?(a=(o=",")+" ",this._formatDelimitedString(e,o,a,i)):e.trim().indexOf(" ")>-1?(o=a=" ",this._formatDelimitedString(e,o,a,i)):this._formatNumberFromString(e,i)}}return e},t.prototype._getFieldInfo=function(e,t){if(e&&e.length&&t){var r=t.toLowerCase(),n=void 0;return e.some((function(e){return!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(n=e,0))})),n}},t.prototype._formatDelimitedString=function(e,t,r,n){var i=this;return e&&t&&r&&n?e.trim().split(t).map((function(e){return i._formatNumberFromString(e,n)})).join(r):e},t.prototype._formatNumberFromString=function(e,t){if(!e||!t)return e;var r=Number(e);return isNaN(r)?e:t.format(r)},t.prototype._processVisibleRastersResponse=function(e,t){t=t||{};var r,n,o,a=e.value,s=t.templateRRFunctionNames,l=t.showNoDataRecords,u=t.returnDomainValues,p=t.templateFields,d=e.processedValues,f=e.catalogItems&&e.catalogItems.features,y=e.properties&&e.properties.Values&&e.properties.Values.map((function(e){return e.replace(/ /gi,", ")}))||[],m=this.objectIdField||"ObjectId",h="string"==typeof a&&a.toLowerCase().indexOf("nodata")>-1,_=[];if(a&&!f&&!h){var g={};g[m]=0,y=[a],f=[new i(this.fullExtent,null,g)]}if(!f)return[];this._updateResponseFieldNames(f,p);for(var v=0;v<f.length;v++){if(r=f[v],null!=a&&!h){if(n=y[v],o=this.renderingRule&&d&&d.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?d[s.indexOf(this.renderingRule.functionName)]:a,"nodata"===n.toLowerCase()&&!l)continue;r.attributes["Raster.ItemPixelValue"]=this._formatAttributeValue(n,"Raster.ItemPixelValue"),r.attributes["Raster.ServicePixelValue"]=this._formatAttributeValue(o,"Raster.ServicePixelValue"),this._updateFeatureWithMagDirValues(r,n);var b=this.fields&&this.fields.length>0,w=this.renderingRule&&c.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?b?n:a:o;this.renderingRule||(w=b?n:a),this._updateFeatureWithRasterAttributeTableValues(r,w)}if(r.sourceLayer=this,u&&this._updateFeatureWithDomainValues(r),s&&d&&s.length===d.length)for(var R=0;R<s.length;R++){var x="Raster.ServicePixelValue."+s[R];r.attributes[x]=this._formatAttributeValue(d[R],x)}_.push(f[v])}return _},t.prototype._updateFeatureWithRasterAttributeTableValues=function(e,t){var r=this,n=this.rasterInfo&&this.rasterInfo.attributeTable||c.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=n&&n.features;if(i){var o=n.fields,a=o.map((function(e){return e.name})).filter((function(e){return"value"===e.toLowerCase()})),s=a&&a[0];if(s){var l=i.filter((function(e){return e.attributes[s]===(null!=t?parseInt(t,10):null)}));l&&l[0]&&o.forEach((function(t){var n=r.rasterAttributeTableFieldPrefix+t.name;e.attributes[n]=r._formatAttributeValue(l[0].attributes[t.name],n)}))}}},t.prototype._updateFeatureWithMagDirValues=function(e,t){if(this.pixelFilter&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType)){var r=t.replace(" ",",").split(",").map((function(e){return parseFloat(e)})),i=r.map((function(e){return[e]})),o=r.map((function(e){return{minValue:e,maxValue:e,noDataValue:null}})),a=new x({height:1,width:1,pixelType:"f32",pixels:i,statistics:o});this.pixelFilter({pixelBlock:a,extent:new n.Extent(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=a.pixels[0][0],e.attributes["Raster.Direction"]=a.pixels[1][0]}},t.prototype._updateFeatureWithDomainValues=function(e){var t=this.fields&&this.fields.filter((function(e){return e.domain&&"coded-value"===e.domain.type}));null!=t&&t.forEach((function(t){var r=e.attributes[t.name];if(null!=r){var n=t.domain.codedValues.filter((function(e){return e.code===r}))[0];n&&(e.attributes[t.name]=n.name)}}))},t.prototype._updateResponseFieldNames=function(e,t){if(t&&!(t.length<1)){var r=this.fieldsIndex;r&&e.forEach((function(e){if(e&&e.attributes)for(var n=0,i=t;n<i.length;n++){var o=i[n];if(r.has(o)){var a=r.get(o).name;a!==o&&(e.attributes[o]=e.attributes[a],delete e.attributes[a])}}}))}},t.prototype._updateRenderingRulesFunctionName=function(e,t){if(e&&!(e.length<1)){if("Raw"===e)return e.replace("Raw","None");var r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}},t.prototype._isRFTJson=function(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")},t.prototype._readCapabilities=function(e){var t=e.capabilities?e.capabilities.toLowerCase().split(",").map((function(e){return e.trim()})):["image","catalog"],r=e.currentVersion,n=e.advancedQueryCapabilities,i=e.maxRecordCount,o=t.indexOf("image")>-1,a="esriImageServiceDataTypeElevation"===e.serviceDataType,s=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:o,supportsExportImage:o,supportsIdentify:o,supportsMeasure:t.indexOf("mensuration")>-1&&s,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&o,supportsProject:r>=10.3&&o,supportsComputeStatisticsHistograms:r>=10.4&&o,supportsQueryBoundary:r>=10.6&&o,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!n||!n.supportsStatistics),supportsOrderBy:!(!n||!n.supportsOrderBy),supportsDistinct:!(!n||!n.supportsDistinct),supportsPagination:!(!n||!n.supportsPagination),supportsStandardizedQueriesOnly:!(!n||!n.useStandardizedQueries),maxRecordCount:i}}},r.__decorate([y.property()],t.prototype,"_functionRasterInfos",void 0),r.__decorate([y.property()],t.prototype,"_rasterJobHandler",void 0),r.__decorate([y.property()],t.prototype,"_symbolizer",void 0),r.__decorate([y.property()],t.prototype,"_defaultServiceMosaicRule",void 0),r.__decorate([y.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),r.__decorate([y.property()],t.prototype,"_cachedRendererJson",void 0),r.__decorate([y.property()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),r.__decorate([y.property({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],t.prototype,"rasterFunctionNamesIndex",null),r.__decorate([y.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),r.__decorate([y.property()],t.prototype,"adjustAspectRatio",void 0),r.__decorate([y.property({readOnly:!0}),y.aliasOf("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),r.__decorate([y.property({type:[m.Integer],json:{write:!0}})],t.prototype,"bandIds",void 0),r.__decorate([y.reader("bandIds")],t.prototype,"readBandIds",null),r.__decorate([y.property({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),r.__decorate([y.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),r.__decorate([y.property({type:Number})],t.prototype,"compressionQuality",void 0),r.__decorate([y.writer("compressionQuality")],t.prototype,"writeCompressionQuality",null),r.__decorate([y.property({type:Number})],t.prototype,"compressionTolerance",void 0),r.__decorate([y.writer("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),r.__decorate([y.property({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),r.__decorate([y.property({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),r.__decorate([y.property({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),r.__decorate([y.property()],t.prototype,"rasterInfo",void 0),r.__decorate([y.property({readOnly:!0,type:[v]})],t.prototype,"fields",void 0),r.__decorate([y.property({readOnly:!0,dependsOn:["fields"]})],t.prototype,"fieldsIndex",null),r.__decorate([y.property({type:String,json:{write:!0}})],t.prototype,"format",null),r.__decorate([y.property({type:n.Extent})],t.prototype,"fullExtent",void 0),r.__decorate([y.property({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),r.__decorate([y.property({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),r.__decorate([y.property({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),r.__decorate([y.property({type:String,json:{read:{reader:J.read},write:{writer:J.write}}})],t.prototype,"interpolation",void 0),r.__decorate([y.property({type:R})],t.prototype,"mosaicRule",null),r.__decorate([y.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),r.__decorate([y.writer("mosaicRule")],t.prototype,"writeMosaicRule",null),r.__decorate([y.property({readOnly:!0}),y.aliasOf("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),r.__decorate([y.property()],t.prototype,"noData",void 0),r.__decorate([y.writer("noData")],t.prototype,"writeNoData",null),r.__decorate([y.property({type:String,json:{read:{reader:A.read},write:{writer:A.write}}})],t.prototype,"noDataInterpretation",void 0),r.__decorate([y.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),r.__decorate([y.reader("objectIdField")],t.prototype,"readObjectIdField",null),r.__decorate([y.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),r.__decorate([y.property({readOnly:!0}),y.aliasOf("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),r.__decorate([y.property({readOnly:!0}),y.aliasOf("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),r.__decorate([y.property({type:Function})],t.prototype,"pixelFilter",void 0),r.__decorate([y.property()],t.prototype,"raster",void 0),r.__decorate([y.property()],t.prototype,"viewId",void 0),r.__decorate([y.property({types:o.rasterRendererTypes,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],t.prototype,"renderer",void 0),r.__decorate([y.reader("renderer")],t.prototype,"readRenderer",null),r.__decorate([y.property(h.opacityDrawingInfo)],t.prototype,"opacity",void 0),r.__decorate([y.property({readOnly:!0}),y.aliasOf("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),r.__decorate([y.property({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],t.prototype,"rasterFields",null),r.__decorate([y.property({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),r.__decorate([y.property({type:S})],t.prototype,"renderingRule",null),r.__decorate([y.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),r.__decorate([y.writer("renderingRule")],t.prototype,"writeRenderingRule",null),r.__decorate([y.property()],t.prototype,"serviceDataType",void 0),r.__decorate([y.property({readOnly:!0,type:n.SpatialReference})],t.prototype,"spatialReference",void 0),r.__decorate([y.reader("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),r.__decorate([y.property()],t.prototype,"pixelType",void 0),r.__decorate([y.reader("pixelType")],t.prototype,"readPixelType",null),r.__decorate([y.writer("pixelType")],t.prototype,"writePixelType",null),r.__decorate([y.property({constructOnly:!0,type:I})],t.prototype,"serviceRasterInfo",void 0),r.__decorate([y.property()],t.prototype,"sourceJSON",void 0),r.__decorate([y.property(h.url)],t.prototype,"url",void 0),r.__decorate([y.property({readOnly:!0})],t.prototype,"version",void 0),r.__decorate([y.reader("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),r.__decorate([y.subclass("esri.layers.mixins.ArcGISImageService")],t)}(e)}}.apply(null,n))||(e.exports=i)},690:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(166),r(155),r(151),r(422),r(400)],void 0===(i=function(e,t,r,n,i,o,a,s){Object.defineProperty(t,"__esModule",{value:!0});var l=new n.default({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),u=new n.default({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.layer=null,t.adjustAspectRatio=void 0,t.bandIds=void 0,t.compression=void 0,t.compressionQuality=void 0,t.compressionTolerance=.01,t.format=null,t.interpolation=null,t.noData=null,t.noDataInterpretation=void 0,t.pixelType=void 0,t.lercVersion=2,t}return r.__extends(t,e),t.prototype.writeAdjustAspectRatio=function(e,t,r){this.layer.version<10.3||(t[r]=e)},t.prototype.writeCompressionQuality=function(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)},t.prototype.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},t.prototype.writeLercVersion=function(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)},Object.defineProperty(t.prototype,"version",{get:function(){var e=this.layer;return e.bandIds,e.format,e.compressionQuality,e.compressionTolerance,e.interpolation,e.noData,e.noDataInterpretation,e.mosaicRule,e.renderingRule,e.adjustAspectRatio,e.pixelFilter,e.renderer,e.definitionExpression,(this._get("version")||0)+1},set:function(e){this._set("version",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"mosaicRule",{get:function(){var e=this.layer,t=e.mosaicRule,r=e.definitionExpression;return t?r&&r!==t.where&&((t=t.clone()).where=r):r&&(t=new s({where:r})),t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"renderingRule",{get:function(){var e=this.layer,t=e.renderingRule,r=e.pixelFilter;return(!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1)&&!r&&(t=this.combineRendererWithRenderingRule()),t},enumerable:!0,configurable:!0}),t.prototype.combineRendererWithRenderingRule=function(){var e=this.layer,t=e.rasterInfo,r=e.renderingRule,n=e.renderer;return n&&a.isSupportedRendererType(n)?a.combineRenderingRules(a.convertRendererToRenderingRule(n,{rasterAttributeTable:t.attributeTable,pixelType:t.pixelType,convertColorRampToColormap:e.version<10.6,dataType:t.dataType}),r):r},r.__decorate([o.property()],t.prototype,"layer",void 0),r.__decorate([o.property({json:{write:!0}})],t.prototype,"adjustAspectRatio",void 0),r.__decorate([o.writer("adjustAspectRatio")],t.prototype,"writeAdjustAspectRatio",null),r.__decorate([o.property({json:{write:!0}}),o.aliasOf("layer.bandIds")],t.prototype,"bandIds",void 0),r.__decorate([o.property({json:{write:!0}})],t.prototype,"compression",void 0),r.__decorate([o.property({json:{write:!0}}),o.aliasOf("layer.compressionQuality")],t.prototype,"compressionQuality",void 0),r.__decorate([o.writer("compressionQuality")],t.prototype,"writeCompressionQuality",null),r.__decorate([o.property({json:{write:!0}}),o.aliasOf("layer.compressionTolerance")],t.prototype,"compressionTolerance",void 0),r.__decorate([o.writer("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),r.__decorate([o.property({json:{write:!0}}),o.aliasOf("layer.format")],t.prototype,"format",void 0),r.__decorate([o.property({type:String,json:{read:{reader:l.read},write:{writer:l.write}}}),o.aliasOf("layer.interpolation")],t.prototype,"interpolation",void 0),r.__decorate([o.property({json:{write:!0}}),o.aliasOf("layer.noData")],t.prototype,"noData",void 0),r.__decorate([o.property({type:String,json:{read:{reader:u.read},write:{writer:u.write}}}),o.aliasOf("layer.noDataInterpretation")],t.prototype,"noDataInterpretation",void 0),r.__decorate([o.property({json:{write:!0}})],t.prototype,"pixelType",void 0),r.__decorate([o.property({json:{write:!0}})],t.prototype,"lercVersion",void 0),r.__decorate([o.writer("lercVersion")],t.prototype,"writeLercVersion",null),r.__decorate([o.property({type:Number,dependsOn:["layer.adjustAspectRatio","layer.bandIds","layer.format","layer.compressionQuality","layer.compressionTolerance","layer.definitionExpression","layer.interpolation","layer.noData","layer.noDataInterpretation","layer.mosaicRule","layer.renderingRule","layer.pixelFilter","layer.renderer","lercVersion","pixelType"]})],t.prototype,"version",null),r.__decorate([o.property({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],t.prototype,"mosaicRule",null),r.__decorate([o.property({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],t.prototype,"renderingRule",null),r.__decorate([o.subclass("esri.layers.mixins.ExportImageServiceParameters")],t)}(i.JSONSupport);t.ExportImageServiceParameters=p}.apply(null,n))||(e.exports=i)},693:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(165),r(152),r(151),r(234),r(327),r(694)],void 0===(i=function(e,t,r,n,i,o,a,s,l){return function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r.__extends(t,e),t.prototype.execute=function(e,t){var o=this,s=e.geometry?[e.geometry]:[];return a.normalizeCentralMeridian(s).then((function(a){var s=e.toJSON(),l=a&&a[0];i.isSome(l)&&(s.geometry=JSON.stringify(l.toJSON()));var u=o._encode(r.__assign(r.__assign({f:"json"},o.parsedUrl.query),s)),p=r.__assign(r.__assign({query:u},o.requestOptions),t);return n(o.parsedUrl.path+"/identify",p)})).then((function(e){return l.fromJSON(e.data)}))},r.__decorate([o.subclass("esri.tasks.ImageServiceIdentifyTask")],t)}(s)}.apply(null,n))||(e.exports=i)},694:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(155),r(151),r(202),r(187)],void 0===(i=function(e,t,r,n,i,o,a){return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.catalogItemVisibilities=null,t.catalogItems=null,t.location=null,t.name=null,t.objectId=null,t.processedValues=null,t.properties=null,t.value=null,t}return r.__extends(t,e),r.__decorate([i.property({json:{write:!0}})],t.prototype,"catalogItemVisibilities",void 0),r.__decorate([i.property({type:a,json:{write:!0}})],t.prototype,"catalogItems",void 0),r.__decorate([i.property({type:o,json:{write:!0}})],t.prototype,"location",void 0),r.__decorate([i.property({json:{write:!0}})],t.prototype,"name",void 0),r.__decorate([i.property({json:{write:!0}})],t.prototype,"objectId",void 0),r.__decorate([i.property({json:{write:!0}})],t.prototype,"processedValues",void 0),r.__decorate([i.property({json:{write:!0}})],t.prototype,"properties",void 0),r.__decorate([i.property({json:{write:!0}})],t.prototype,"value",void 0),r.__decorate([i.subclass("esri.tasks.support.ImageServiceIdentifyResult")],t)}(n.JSONSupport)}.apply(null,n))||(e.exports=i)},696:function(e,t,r){var n,i;n=[r.dj.c(e.i),t,r(117),r(282),r(155),r(151),r(202),r(163),r(400),r(313)],void 0===(i=function(e,t,r,n,i,o,a,s,l,u){return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.geometry=null,t.renderingRules=null,t.pixelSize=null,t.returnGeometry=!0,t.returnCatalogItems=!0,t.returnPixelValues=!0,t.maxItemCount=null,t.timeExtent=null,t.raster=void 0,t.viewId=void 0,t}return r.__extends(t,e),t.prototype.writeGeometry=function(e,t,r){null!=e&&(t.geometryType=s.getJsonType(e),t[r]=JSON.stringify(e.toJSON()))},Object.defineProperty(t.prototype,"mosaicRule",{set:function(e){var t=e;t&&t.mosaicMethod&&(t=l.fromJSON(r.__assign(r.__assign({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)},enumerable:!0,configurable:!0}),t.prototype.writeMosaicRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},Object.defineProperty(t.prototype,"renderingRule",{set:function(e){var t=e;t&&t.rasterFunction&&(t=u.fromJSON(r.__assign(r.__assign({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)},enumerable:!0,configurable:!0}),t.prototype.writeRenderingRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},t.prototype.writeRenderingRules=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((function(e){return e.toJSON()}))))},t.prototype.writePixelSize=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},t.prototype.writeTimeExtent=function(e,t,r){if(null!=e){var n=e.start?e.start.getTime():null,i=e.end?e.end.getTime():null;t[r]=null!=n?null!=i?n+","+i:""+n:null}},r.__decorate([o.property({json:{write:!0}})],t.prototype,"geometry",void 0),r.__decorate([o.writer("geometry")],t.prototype,"writeGeometry",null),r.__decorate([o.property({type:l,json:{write:!0}})],t.prototype,"mosaicRule",null),r.__decorate([o.writer("mosaicRule")],t.prototype,"writeMosaicRule",null),r.__decorate([o.property({type:u,json:{write:!0}})],t.prototype,"renderingRule",null),r.__decorate([o.writer("renderingRule")],t.prototype,"writeRenderingRule",null),r.__decorate([o.property({type:[u],json:{write:!0}})],t.prototype,"renderingRules",void 0),r.__decorate([o.writer("renderingRules")],t.prototype,"writeRenderingRules",null),r.__decorate([o.property({type:a,json:{write:!0}})],t.prototype,"pixelSize",void 0),r.__decorate([o.writer("pixelSize")],t.prototype,"writePixelSize",null),r.__decorate([o.property({type:Boolean,json:{write:!0}})],t.prototype,"returnGeometry",void 0),r.__decorate([o.property({type:Boolean,json:{write:!0}})],t.prototype,"returnCatalogItems",void 0),r.__decorate([o.property({type:Boolean,json:{write:!0}})],t.prototype,"returnPixelValues",void 0),r.__decorate([o.property({type:Number,json:{write:!0}})],t.prototype,"maxItemCount",void 0),r.__decorate([o.property({type:n,json:{write:{target:"time"}}})],t.prototype,"timeExtent",void 0),r.__decorate([o.writer("timeExtent")],t.prototype,"writeTimeExtent",null),r.__decorate([o.property({json:{write:!0}})],t.prototype,"raster",void 0),r.__decorate([o.property({json:{write:!0}})],t.prototype,"viewId",void 0),r.__decorate([o.subclass("esri.tasks.support.ImageServiceIdentifyParameters")],t)}(i.JSONSupport)}.apply(null,n))||(e.exports=i)}}]);
//# sourceMappingURL=64.js.map